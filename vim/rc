" How I prefer my tabs/spaces
set ts=2 sts=4 sw=4 expandtab

if has('autocmd')
  
  " turn filetype off per the pathogen instructions at
  " http://www.vim.org/scripts/script.php?script_id=2332
  filetype off
  
  call pathogen#runtime_append_all_bundles()
  
  " turn filetype back on after calling pathogen
  filetype on
  filetype plugin on
  
  " set filetypes for a given extension
  au BufRead,BufNewFile *.R set ft=R
  au BufRead,BufNewFile *.snippets set ft=snippet
  
  " local settings for specific filetypes
  au FileType make,snippet setlocal ts=8 sts=8 sw=8 noexpandtab
  au FileType python setlocal ts=4 sts=4 sw=4
  
  " compile coffeescripts on save
  au BufWritePost,FileWritePost *.coffee :silent !coffee -c %
  
endif

" set the leader key to the comma
let mapleader=','

" source custom functions
so ~/.dotfiles/vim/functions

" map ,w to StripTrailingWhitespaces()
nnoremap <silent> <leader>w :call StripTrailingWhitespaces()<cr>

" toggle invisibles with ,i
nmap <leader>i :set list!<cr>

" toggle cursorline highlighting
nmap <leader>c :set cursorline!<cr>

" toggle spellcheck with ,s
nmap <leader>s :set spell!<cr>

" toggle previous buffer with ,,
nmap <leader><leader> <c-^>

" clear search highlighting
nmap <ret> :nohlsearch<cr>

" open files in the same directory as the current file
cnoremap %% <c-r>=expand('%:h').'/'<cr>
map <leader>e :edit %%
map <leader>v :view %%

" a visual reminder of an 80-character line
if exists('+colorcolumn')
  set colorcolumn=140
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

" don't autofold, but still allow manual folding
set foldlevel=100

set autoindent
set smartindent
set hidden
set hlsearch
set list
set number
set ruler
set smarttab
set showcmd
set wildmenu
set ignorecase
set smartcase
set scrolloff=5
set backspace=indent,eol,start " backspace over everything

" mimic TextMate's invisible characters
set listchars=tab:▸\ ,eol:¬

" show current file (filetype) on the left and 
" [cursor position line,colum] [number of lines] on the right
set statusline=%F%m%r%h%w\ (%{&ft})\ %=[%l,%v]\ [%L\ lines]

" show the status line
set laststatus=2

syntax enable
syntax on

colorscheme elflord

"tab stuff
set switchbuf=usetab,newtab
set guitablabel=\[%N\]\ %t\ %M

" toggle line numbers
nmap <C-L> :set invnumber<CR>

"""""
"Nerdtree stuff
"""""

"start nerd tree by default
autocmd vimenter * NERDTree
" on new buffer or vim enter put the cursor in the main window
autocmd BufNew * wincmd w
autocmd vimenter * wincmd w
"exit vim if you close the last buffer 
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
"add nerd tree toggle
map <C-n> :NERDTreeToggle<CR>
"center focus on nerd tree startup
